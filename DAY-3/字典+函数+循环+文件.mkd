### 字典+函数+循环+文件
#### 字典
* 字典遍历  
```python
scores={} #设置一个字典  
scores[name]=planck #直接插入新元素
l=[1,2,3]
scores[happy]=l #字典的值可以是一个列表
for i in scores:
  print(i) #i遍历的是key，i=name，happy

```
#### 函数
* 函数开关
```python
def i(m): 
  a=3
  b=4
  return a,b #可以return 多个值，return的是元组
i(0) #可以设置任意参数直接运行，本函数可以当作开关使用
```
* 函数在判断语句中
```python
def a(c):
  c=c+1
  print('start')
  return c
c=3
if a(c)>2: #注意只要有函数的地方就会执行，这里虽然只做了判断，但还是运行了函数
  print('over')
m = a(5) #注意只要有函数的地方就会执行，这里虽然只是承接，但还是运行了函数
```
#### 循环的break
* break
```python
for i in rang(10,1,-1): #左边包括，右边不包括，step是-1
  if i == 5:
    break #当条件成立，跳出循环，while 同理
  print(i) #10,9,8,7,6
```
#### 文件
* 文件的写入
```python
m=4
with open('happy.txt','w') as file: #注意，如果没有文件，会自动创建该命名文件，w会将原始清空并重新写入
  m=str(m)
  data=f'{m}\nlove' #注意字符串带变量、列表等的写法
  file.write(data) #只能写入字符串，其他格式需要转成字符串
```
* 文件的读取
```python
with open('happy.txt','r+') as file:
  lines=file.readlines # 逐行读取，每行保存成一个字符串，并集合成一个列表lines
  file.close #不要忘记关闭文件
m=[] #当一个初始是空的元素需要定义新元素
x=[1,2,4]
for line in lines: #遍历列表
  m=line.split(' ') # 每行根据空格进行分列，注意分成列表储存在m中
  x=x+m #列表可以直接相加
print(x)
  
